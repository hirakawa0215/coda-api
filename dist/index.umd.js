!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e(require("axios")):"function"==typeof define&&define.amd?define(["axios"],e):t.codaJs=e(t.axios)}(this,function(t){t=t&&t.hasOwnProperty("default")?t.default:t,"undefined"!=typeof Symbol&&(Symbol.iterator||(Symbol.iterator=Symbol("Symbol.iterator"))),"undefined"!=typeof Symbol&&(Symbol.asyncIterator||(Symbol.asyncIterator=Symbol("Symbol.asyncIterator")));var e=function(e){t.defaults.baseURL="https://coda.io/apis/v1beta1",t.defaults.headers.common.Authorization="Bearer "+e};e.prototype.request=function(e,r,o){void 0===r&&(r={}),void 0===o&&(o="GET");try{return Promise.resolve(function(n,s){try{var i=(c=["POST","PUT","PATCH"].includes(o.toUpperCase())?{url:e,method:o,data:r}:{url:e,method:o,params:r},Promise.resolve(t(c)))}catch(t){return s(t)}var c;return i&&i.then?i.then(void 0,s):i}(0,function(t){console.error(t)}))}catch(t){return Promise.reject(t)}};var r=function(t,e){this.API=t,Object.assign(this,e)};r.prototype.listSections=function(t){try{var e=this;return Promise.resolve(e.API.request("/docs/"+e.id+"/sections",t)).then(function(t){return t.data.items.map(function(t){return new c(Object.assign({},t,{docId:e.id}))})})}catch(t){return Promise.reject(t)}},r.prototype.getSection=function(t){try{var e=this;return Promise.resolve(e.API.request("/docs/"+e.id+"/sections/"+t)).then(function(t){return new c(Object.assign({},t.data,{docId:e.id}))})}catch(t){return Promise.reject(t)}},r.prototype.listFolders=function(t){try{var e=this;return Promise.resolve(e.API.request("/docs/"+e.id+"/folders",t)).then(function(t){return t.data.items.map(function(t){return new u(Object.assign({},t,{docId:e.id}))})})}catch(t){return Promise.reject(t)}},r.prototype.getFolder=function(t){try{var e=this;return Promise.resolve(e.API.request("/docs/"+e.id+"/folders/"+t)).then(function(t){return new u(Object.assign({},t.data,{docId:e.id}))})}catch(t){return Promise.reject(t)}},r.prototype.listTables=function(){try{var t=this;return Promise.resolve(t.API.request("/docs/"+t.id+"/tables")).then(function(e){return e.data.items.map(function(e){return new i(t.API,Object.assign({},e,{docId:t.id}))})})}catch(t){return Promise.reject(t)}},r.prototype.getTable=function(t){try{var e=this;return Promise.resolve(e.API.request("/docs/"+e.id+"/tables/"+t)).then(function(t){return new i(e.API,Object.assign({},t.data,{docId:e.id}))})}catch(t){return Promise.reject(t)}};var o=function(t){Object.assign(this,t)},n=function(t){if(!Array.isArray(t))throw new Error("`rows` must be an array");if(!t.length)throw new Error("Must include at least one row when calling `insertRows`");return t.map(function(t){if(Array.isArray(t)){if(t.some(function(t){return t.hasOwnProperty("column")&&t.hasOwnProperty("value")}))return{cells:t};throw new Error("A row must either be an array of objects for each column, or else one object of column/value pairs..")}var e=[];return Object.keys(t).forEach(function(r){e.push({column:r,value:t[r]})}),{cells:e}})},s=function(t,e){this.API=t,Object.assign(this,e)};s.prototype.listValues=function(){var t=this,e=[];return Object.keys(this.values).forEach(function(r){e.push({column:r,value:t.values[r]})}),e},s.prototype.update=function(t){try{var e=n([t]);return Promise.resolve(this.API.request("/docs/"+this.docId+"/tables/"+this.tableId+"/rows/"+this.id,{row:e[0]},"PUT")).then(function(t){return 202===t.status})}catch(t){return Promise.reject(t)}},s.prototype.delete=function(){try{return Promise.resolve(this.API.request("/docs/"+this.docId+"/tables/"+this.tableId+"/rows/"+this.id,{},"DELETE")).then(function(t){return 202===t.status})}catch(t){return Promise.reject(t)}};var i=function(t,e){this.API=t,Object.assign(this,e)};i.prototype.listColumns=function(t){try{var e=this;return Promise.resolve(e.API.request("/docs/"+e.docId+"/tables/"+e.id+"/columns",t)).then(function(t){return t.data.items.map(function(t){return new o(Object.assign({},t,{docId:e.docId,tableId:e.id}))})})}catch(t){return Promise.reject(t)}},i.prototype.getColumn=function(t){try{var e=this;return Promise.resolve(e.API.request("/docs/"+e.docId+"/tables/"+e.id+"/columns/"+t)).then(function(t){return new o(Object.assign({},t.data,{docId:e.docId,tableId:e.id}))})}catch(t){return Promise.reject(t)}},i.prototype.listRows=function(t){try{var e=this;return Promise.resolve(e.API.request("/docs/"+e.docId+"/tables/"+e.id+"/rows",t)).then(function(t){return t.data.items.map(function(t){return new s(e.API,Object.assign({},t,{docId:e.docId,tableId:e.id}))})})}catch(t){return Promise.reject(t)}},i.prototype.getRow=function(t,e){try{var r=this;return Promise.resolve(r.API.request("/docs/"+r.docId+"/tables/"+r.id+"/rows/"+t,e)).then(function(t){return new s(r.API,Object.assign({},t.data,{docId:r.docId,tableId:r.id}))})}catch(t){return Promise.reject(t)}},i.prototype.insertRows=function(t,e){void 0===t&&(t=[]),void 0===e&&(e=[]);try{var r=n(t);return Promise.resolve(this.API.request("/docs/"+this.docId+"/tables/"+this.id+"/rows",{rows:r,keyColumns:e},"POST")).then(function(t){return 202===t.status})}catch(t){return Promise.reject(t)}},i.prototype.updateRow=function(t,e){try{var r=n([e]);return Promise.resolve(this.API.request("/docs/"+this.docId+"/tables/"+this.id+"/rows/"+t,{row:r[0]},"PUT")).then(function(t){return 202===t.status})}catch(t){return Promise.reject(t)}},i.prototype.deleteRow=function(t){try{return Promise.resolve(this.API.request("/docs/"+this.docId+"/tables/"+this.id+"/rows/"+t,{},"DELETE")).then(function(t){return 202===t.status})}catch(t){return Promise.reject(t)}};var c=function(t){Object.assign(this,t)},u=function(t){Object.assign(this,t)},a=function(t){this.API=new e(t)};return a.prototype.whoAmI=function(){try{return Promise.resolve(this.API.request("/whoami")).then(function(t){return t.data})}catch(t){return Promise.reject(t)}},a.prototype.listDocs=function(t){void 0===t&&(t={});try{var e=this;return Promise.resolve(e.API.request("/docs",t)).then(function(t){return t.data.items.map(function(t){return new r(e.API,t)})})}catch(t){return Promise.reject(t)}},a.prototype.getDoc=function(t){try{var e=this;return Promise.resolve(e.API.request("/docs/"+t)).then(function(t){return new r(e.API,t.data)})}catch(t){return Promise.reject(t)}},a.prototype.listSections=function(t,e){try{return Promise.resolve(this.API.request("/docs/"+t+"/sections",e)).then(function(e){return e.data.items.map(function(e){return new c(Object.assign({},e,{docId:t}))})})}catch(t){return Promise.reject(t)}},a.prototype.getSection=function(t,e){try{return Promise.resolve(this.API.request("/docs/"+t+"/sections/"+e)).then(function(e){return new c(Object.assign({},e.data,{docId:t}))})}catch(t){return Promise.reject(t)}},a.prototype.listFolders=function(t,e){try{return Promise.resolve(this.API.request("/docs/"+t+"/folders",e)).then(function(e){return e.data.items.map(function(e){return new u(Object.assign({},e,{docId:t}))})})}catch(t){return Promise.reject(t)}},a.prototype.getFolder=function(t,e){try{return Promise.resolve(this.API.request("/docs/"+t+"/folders/"+e)).then(function(e){return new u(Object.assign({},e.data,{docId:t}))})}catch(t){return Promise.reject(t)}},a.prototype.listTables=function(t){try{var e=this;return Promise.resolve(e.API.request("/docs/"+t+"/tables")).then(function(r){return r.data.items.map(function(r){return new i(e.API,Object.assign({},r,{docId:t}))})})}catch(t){return Promise.reject(t)}},a.prototype.getTable=function(t,e){try{var r=this;return Promise.resolve(r.API.request("/docs/"+t+"/tables/"+e)).then(function(e){return new i(r.API,Object.assign({},e.data,{docId:t}))})}catch(t){return Promise.reject(t)}},a.prototype.listColumns=function(t,e,r){try{return Promise.resolve(this.API.request("/docs/"+t+"/tables/"+e+"/columns",r)).then(function(r){return r.data.items.map(function(r){return new o(Object.assign({},r,{docId:t,tableId:e}))})})}catch(t){return Promise.reject(t)}},a.prototype.getColumn=function(t,e,r){try{return Promise.resolve(this.API.request("/docs/"+t+"/tables/"+e+"/columns/"+r)).then(function(r){return new o(Object.assign({},r.data,{docId:t,tableId:e}))})}catch(t){return Promise.reject(t)}},a.prototype.listRows=function(t,e,r){try{var o=this;return Promise.resolve(o.API.request("/docs/"+t+"/tables/"+e+"/rows",r)).then(function(r){return r.data.items.map(function(r){return new s(o.API,Object.assign({},r,{docId:t,tableId:e}))})})}catch(t){return Promise.reject(t)}},a.prototype.getRow=function(t,e,r,o){try{var n=this;return Promise.resolve(n.API.request("/docs/"+t+"/tables/"+e+"/rows/"+r,o)).then(function(r){return new s(n.API,Object.assign({},r.data,{docId:t,tableId:e}))})}catch(t){return Promise.reject(t)}},a.prototype.insertRows=function(t,e,r,o){void 0===r&&(r=[]),void 0===o&&(o=[]);try{var s=n(r);return Promise.resolve(this.API.request("/docs/"+t+"/tables/"+e+"/rows",{rows:s,keyColumns:o},"POST")).then(function(t){return 202===t.status})}catch(t){return Promise.reject(t)}},a.prototype.updateRow=function(t,e,r,o){try{var s=n([o]);return Promise.resolve(this.API.request("/docs/"+t+"/tables/"+e+"/rows/"+r,{row:s[0]},"PUT")).then(function(t){return 202===t.status})}catch(t){return Promise.reject(t)}},a.prototype.deleteRow=function(t,e,r){try{return Promise.resolve(this.API.request("/docs/"+t+"/tables/"+e+"/rows/"+r,{},"DELETE")).then(function(t){return 202===t.status})}catch(t){return Promise.reject(t)}},a});
//# sourceMappingURL=index.umd.js.map
